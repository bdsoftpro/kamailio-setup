#!/bin/bash

# find text from all file in directory
# grep -rnw '/path/to/somewhere/' -e 'pattern'

set -e

SRCPATH="$PWD"
KAMBASE=/usr/local
RTPBASE=/usr
mkdir -p script
cd script

apt-get -y update

apt-get -y install gcc flex bison libunistring-dev libssl-dev libcurl4-openssl-dev libxml2-dev libpcre3-dev build-essential debhelper default-libmysqlclient-dev gperf iptables-dev libavcodec-dev libavfilter-dev libavformat-dev libavutil-dev libbencode-perl libcrypt-openssl-rsa-perl libcrypt-rijndael-perl libhiredis-dev libio-multiplex-perl libio-socket-inet6-perl libjson-glib-dev libdigest-crc-perl libdigest-hmac-perl libnet-interface-perl libnet-interface-perl libssl-dev libsystemd-dev libxmlrpc-core-c3-dev libcurl4-openssl-dev libevent-dev libpcap0.8-dev markdown unzip nfs-common dkms libspandsp-dev

if [ ! -f /etc/init.d/mysql* ]; then
	apt-get -y install mysql-server libmysqlclient-dev
	systemctl start mysql 
	systemctl enable mysql
else
	systemctl restart mysql
fi

git clone https://github.com/havfo/WEBRTC-to-SIP.git WEBRTC
cd WEBRTC

echo "====================================================="
echo 
echo "			  Please Fillup Right Information"
echo 
echo "====================================================="
echo 
read -p "Sip IP (IPv4) : " ipv4
read -p "Sip IP (IPv6) : " ipv6
read -p "Domain Name : " dname
echo
	
find . -type f -print0 | xargs -0 sed -i "s/XXXXXX-XXXXXX/${ipv6}/g"
find . -type f -print0 | xargs -0 sed -i "s/XXXXX-XXXXX/${ipv4}/g"
find . -type f -print0 | xargs -0 sed -i "s/XXXX-XXXX/${dname}/g"

cd ../

if [ ! -f /etc/init.d/ngcp-rtpengine-daemon ]; then
	wget -c https://github.com/sipwise/rtpengine/archive/mr6.5.7.4.tar.gz -O - | tar -xz
	cd rtpengine*
	VER=1.0.4
	curl https://codeload.github.com/BelledonneCommunications/bcg729/tar.gz/$VER >bcg729_$VER.orig.tar.gz
	tar zxf bcg729_$VER.orig.tar.gz 
	cd bcg729-$VER 
	git clone https://github.com/ossobv/bcg729-deb.git debian 
	dpkg-buildpackage -us -uc -sa
	cd ../
	dpkg -i libbcg729-*.deb
	dpkg-buildpackage
	cd ../
	dpkg -i ngcp-rtpengine-daemon_*.deb ngcp-rtpengine-iptables_*.deb ngcp-rtpengine-kernel-dkms_*.deb
	cat >/etc/default/ngcp-rtpengine-daemon <<EOF
RUN_RTPENGINE=yes
CONFIG_FILE=/etc/rtpengine/rtpengine.conf
# CONFIG_SECTION=rtpengine
PIDFILE=/run/ngcp-rtpengine-daemon.pid
MANAGE_IPTABLES=yes
TABLE=0
#SET_USER=root
#SET_GROUP=root # GROUP only needs to be set if USER is not set or if the user isn't in the group
EOF
	cp WEBRTC/etc/rtpengine/rtpengine.conf /etc/rtpengine/
	/etc/init.d/ngcp-rtpengine-daemon restart
fi

if [ ! -f /etc/init.d/kamailio* ]; then

	wget -c https://github.com/kamailio/kamailio/archive/5.3.2.tar.gz -O - | tar -xz
	cd kamailio*
	make include_modules="db_mysql dialplan websocket tls" cfg
	make Q=0 all
	make install
	echo "====================================================="
	echo 
	echo "			  Kamailio Mysql Information			   "
	echo 
	echo "====================================================="
	echo 
	read -p "Sip Domain : " sipdomain
	read -p "Database User : " dbuser
	read -p "Database Name : " dbname
	read -s -p "Database Password : " dbpasswd
	echo
	sed -i "/^# SIP_DOMAIN=.*\|^#SIP_DOMAIN=.*/c SIP_DOMAIN=${sipdomain}" $KAMBASE/etc/kamailio/kamctlrc
	sed -i "/^# DBENGINE=MYSQL.*\|^#DBENGINE=MYSQL.*/c DBENGINE=MYSQL" $KAMBASE/etc/kamailio/kamctlrc
	sed -i "/^# DBHOST=.*\|^#DBHOST=.*/c DBHOST=localhost" $KAMBASE/etc/kamailio/kamctlrc
	sed -i "/^# DBPORT=.*\|^#DBPORT=.*/c DBPORT=3306" $KAMBASE/etc/kamailio/kamctlrc
	sed -i "/^# DBNAME=.*\|^#DBNAME=.*/c DBNAME=${dbname}" $KAMBASE/etc/kamailio/kamctlrc
	sed -i "/^# DBRWUSER=.*\|^#DBRWUSER=.*/c DBRWUSER=\"${dbuser}\"" $KAMBASE/etc/kamailio/kamctlrc
	sed -i "/^# DBRWPW=.*\|^#DBRWPW=.*/c DBRWPW=\"${dbpasswd}\"" $KAMBASE/etc/kamailio/kamctlrc
	sed -i "/^# CHARSET=.*\|^#CHARSET=.*/c CHARSET=\"latin1\"" $KAMBASE/etc/kamailio/kamctlrc
	sed -i "/^# ALIASES_TYPE=.*\|^#ALIASES_TYPE=.*/c ALIASES_TYPE=\"DB\"" $KAMBASE/etc/kamailio/kamctlrc
	echo "====================================================="
	echo 
	echo "	Kamailio DB Passwd Enter to Create Data Table"
	echo 
	echo "====================================================="
	echo
	$KAMBASE/sbin/kamdbctl create
	cd ../
	rm -f $KAMBASE/etc/kamailio/kamailio.cfg
	cp WEBRTC/etc/kamailio/kamailio-old.cfg $KAMBASE/etc/kamailio/kamailio.cfg
	sed -i "/^#!define DBURL \"mysql:\/\/.*/c #!define DBURL \"mysql://${dbuser}:${dbpasswd}@localhost/${dbname}\"" $KAMBASE/etc/kamailio/kamailio.cfg
	
	cat >/etc/default/kamailio <<EOF
#
# Kamailio startup options
#
# Set to yes to enable kamailio, once configured properly.
RUN_KAMAILIO=yes
# User to run as
USER=kamailio
# Group to run as
GROUP=kamailio
# Amount of shared and private memory to allocate
# for the running Kamailio server (in Mb)
#SHM_MEMORY=64
#PKG_MEMORY=8
# Config file
CFGFILE=$KAMBASE/etc/kamailio/kamailio.cfg
# Enable the server to leave a core file when it crashes.
# Set this to 'yes' to enable Kamailio to leave a core file when it crashes
# or 'no' to disable this feature. This option is case sensitive and only
# accepts 'yes' and 'no' and only in lowercase letters.
# On some systems it is necessary to specify a directory for the core files
# to get a dump. Look into the kamailio init file for an example configuration.
#DUMP_CORE=yes
EOF
	cp $SRCPATH/kamailio.init /etc/init.d/kamailio

	systemctl daemon-reload
	systemctl start kamailio.service
	systemctl enable kamailio.service
fi

apt-get -y install nginx
cp WEBRTC/etc/nginx/nginx.conf /etc/nginx/
cp WEBRTC/etc/nginx/conf.d/default.conf /etc/nginx/conf.d/
cp -r WEBRTC/client/* /var/www/html/
service nginx restart

apt-get -y install coturn
cp WEBRTC/etc/default/coturn /etc/default/
cp WEBRTC/etc/turnserver.conf /etc/
service coturn restart
